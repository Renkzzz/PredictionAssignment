library(knitr)
library(caret)
library(rpart)
library(rpart.plot)
library(rattle)
library(randomForest)
library(corrplot)
names(train)
set.seed(1234)


traincsv <- read.csv(url(
  "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"))
testcsv <- read.csv(url(
  "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"))

dim(traincsv)


dim(testcsv)




traincsv <- traincsv[,colMeans(is.na(traincsv)) < .9] 
traincsv <- traincsv[,-c(1:7)] 

nvz <- nearZeroVar(traincsv)
traincsv <- traincsv[,-nvz]
dim(traincsv)


inTrain <- createDataPartition(y=traincsv$classe, p=0.7, list=F)
train <- traincsv[inTrain,]
valid <- traincsv[-inTrain,]

control <- trainControl(method="cv", number=3, verboseIter=F)



mod_rf <- train(classe~., data=train, method="rf", trControl = control, tuneLength = 5)

pred_rf <- predict(mod_rf, valid)
cmrf <- confusionMatrix(pred_rf, factor(valid$classe))
cmrf



plot(mod_rf)


mod_trees <- train(classe~., data=train, method="rpart", trControl = control, tuneLength = 5)
fancyRpartPlot(mod_trees$finalModel)


pred_trees <- predict(mod_trees, valid)
cmtrees <- confusionMatrix(pred_trees, factor(valid$classe))
cmtrees


mod_gbm <- train(classe~., data=train, method="gbm", trControl = control, tuneLength = 5, verbose = F)

pred_gbm <- predict(mod_gbm, valid)
cmgbm <- confusionMatrix(pred_gbm, factor(valid$classe))
cmgbm

plot(mod_gbm)


pred <- predict(mod_rf, testcsv)
print(pred)


corrPlot <- cor(train[, -length(names(train))])
corrplot(corrPlot, method="color")
plot(mod_trees)







